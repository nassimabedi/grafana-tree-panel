{
  "__inputs": [
    {
      "name": "DS_JSON_API",
      "label": "JSON API",
      "description": "",
      "type": "datasource",
      "pluginId": "marcusolsson-json-datasource",
      "pluginName": "JSON API"
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.3.3"
    },
    {
      "type": "datasource",
      "id": "marcusolsson-json-datasource",
      "name": "JSON API",
      "version": "1.3.1"
    },
    {
      "type": "panel",
      "id": "pgillich-tree-panel",
      "name": "Tree View",
      "version": "0.1.9"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_JSON_API}"
      },
      "description": "",
      "gridPos": {
        "h": 15,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "expandLevel": 100,
        "orderLevels": "asc",
        "rootName": "Pods by Status",
        "serieColumn": "Cluster",
        "serieVariable": "serieVariable",
        "showItemCount": true,
        "showRoot": true,
        "treeFieldTemplateEngine": "simple",
        "treeFields": "${Status}\n${Cluster}; ${Namespace}\n${App}\n${Name} [${Image}]\n${State}"
      },
      "pluginVersion": "8.3.2",
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_JSON_API}"
          },
          "fields": [
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).namespace",
              "language": "jsonata",
              "name": "Namespace",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).appName",
              "language": "jsonata",
              "name": "App",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).name",
              "language": "jsonata",
              "name": "Name",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).statusPhase",
              "language": "jsonata",
              "name": "Status",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).containerCount",
              "language": "jsonata",
              "name": "Containers",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).containerImage",
              "language": "jsonata",
              "name": "Image",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).containerState",
              "language": "jsonata",
              "name": "State",
              "type": "string"
            }
          ],
          "method": "GET",
          "queryParams": "",
          "refId": "cluster-2",
          "urlPath": "/api/v1/pods"
        }
      ],
      "title": "Pods by Status, raw k8s API",
      "type": "pgillich-tree-panel"
    },
    {
      "datasource": {
        "type": "marcusolsson-json-datasource",
        "uid": "${DS_JSON_API}"
      },
      "description": "",
      "gridPos": {
        "h": 15,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 3,
      "options": {
        "expandLevel": 100,
        "orderLevels": "asc",
        "rootName": "Pods by Status",
        "serieColumn": "Cluster",
        "serieVariable": "serieVariable",
        "showItemCount": true,
        "showRoot": true,
        "treeFieldTemplateEngine": "handlebars",
        "treeFields": "{{printPodColumn rawPod \"STATUS\"}}\n{{Cluster}}; {{Namespace}}\n{{App}}\n{{Name}} [{{Image}}]\n{{printPodColumn rawPod \"MESSAGE\"}}"
      },
      "pluginVersion": "8.3.2",
      "targets": [
        {
          "cacheDurationSeconds": 300,
          "datasource": {
            "type": "marcusolsson-json-datasource",
            "uid": "${DS_JSON_API}"
          },
          "fields": [
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).namespace",
              "language": "jsonata",
              "name": "Namespace",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).appName",
              "language": "jsonata",
              "name": "App",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).name",
              "language": "jsonata",
              "name": "Name",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).statusPhase",
              "language": "jsonata",
              "name": "Status",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).containerCount",
              "language": "jsonata",
              "name": "Containers",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).containerImage",
              "language": "jsonata",
              "name": "Image",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).containerState",
              "language": "jsonata",
              "name": "State",
              "type": "string"
            },
            {
              "jsonPath": "$map(items, function($v) {{\"rawPod\": $v, \"namespace\": $v.metadata.namespace, \"name\": $v.metadata.name, \"appName\": $v.metadata.labels.\"app.kubernetes.io/name\" ? $v.metadata.labels.\"app.kubernetes.io/name\" : ($v.metadata.labels.\"app\" ? $v.metadata.labels.\"app\" : \"-\"), \"statusPhase\": $v.status.phase, \"containerCount\": $count($v.spec.containers), \"containerImage\": $join($v.spec.containers[*].image, \" \"), \"containerState\": $v.status.containerStatuses[*].state ? $string($v.status.containerStatuses[*].state) : \"-\", \"cluster\": $serieVariable}}).rawPod",
              "language": "jsonata",
              "name": "rawPod"
            }
          ],
          "method": "GET",
          "queryParams": "",
          "refId": "cluster-2",
          "urlPath": "/api/v1/pods"
        }
      ],
      "title": "Pods by Status, kubectl columns",
      "type": "pgillich-tree-panel"
    }
  ],
  "refresh": "",
  "schemaVersion": 34,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Pods (tree)",
  "uid": "x1hpfGb7kAll",
  "version": 28,
  "weekStart": ""
}